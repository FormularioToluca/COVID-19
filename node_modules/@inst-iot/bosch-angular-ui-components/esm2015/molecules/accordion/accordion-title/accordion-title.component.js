import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { AccordionService } from '../accordion.service';
let AccordionTitleComponent = class AccordionTitleComponent {
    constructor(accordion) {
        this.accordion = accordion;
        this.open = false;
        this.viewInit = false;
    }
    ngOnChanges(changes) {
        if (changes.open && this.viewInit) {
            this.accordion.updateState.next(this);
        }
    }
    ngAfterViewInit() {
        this.viewInit = true;
        if (this.open) {
            setTimeout(() => {
                this.accordion.updateState.next(this);
            });
        }
    }
    toggle() {
        this.open = !this.open;
        this.accordion.updateState.next(this);
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], AccordionTitleComponent.prototype, "open", void 0);
AccordionTitleComponent = tslib_1.__decorate([
    Component({
        selector: 'rb-accordion-title',
        template: "<div class=\"accordion-row\" [class.open]=\"open\" (click)=\"toggle()\">\r\n  <h5>\r\n    <ng-content></ng-content>\r\n  </h5>\r\n  <a href=\"javascript:\" class=\"accordion-toggle\">\r\n    <span class=\"rb-ic\" [class.rb-ic-add]=\"!open\" [class.rb-ic-less-minimize]=\"open\"></span>\r\n  </a>\r\n</div>\r\n"
    }),
    tslib_1.__metadata("design:paramtypes", [AccordionService])
], AccordionTitleComponent);
export { AccordionTitleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLXRpdGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpbnN0LWlvdC9ib3NjaC1hbmd1bGFyLXVpLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJtb2xlY3VsZXMvYWNjb3JkaW9uL2FjY29yZGlvbi10aXRsZS9hY2NvcmRpb24tdGl0bGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLFNBQVMsRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBTXhELElBQWEsdUJBQXVCLEdBQXBDLE1BQWEsdUJBQXVCO0lBTWxDLFlBQW9CLFNBQTJCO1FBQTNCLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBSnRDLFNBQUksR0FBRyxLQUFLLENBQUM7UUFFZCxhQUFRLEdBQUcsS0FBSyxDQUFDO0lBR3pCLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3ZDO0lBQ0gsQ0FBQztJQUVELGVBQWU7UUFDYixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDYixVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUNkLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN4QyxDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQztJQUdELE1BQU07UUFDSixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQztDQUVGLENBQUE7QUE1QlU7SUFBUixLQUFLLEVBQUU7O3FEQUFjO0FBRlgsdUJBQXVCO0lBSm5DLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxvQkFBb0I7UUFDOUIsaVVBQStDO0tBQ2hELENBQUM7NkNBTytCLGdCQUFnQjtHQU5wQyx1QkFBdUIsQ0E4Qm5DO1NBOUJZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBY2NvcmRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vYWNjb3JkaW9uLnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdyYi1hY2NvcmRpb24tdGl0bGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hY2NvcmRpb24tdGl0bGUuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBY2NvcmRpb25UaXRsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgQWZ0ZXJWaWV3SW5pdCB7XHJcblxyXG4gIEBJbnB1dCgpIG9wZW4gPSBmYWxzZTtcclxuXHJcbiAgcHJpdmF0ZSB2aWV3SW5pdCA9IGZhbHNlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFjY29yZGlvbjogQWNjb3JkaW9uU2VydmljZSkge1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgaWYgKGNoYW5nZXMub3BlbiAmJiB0aGlzLnZpZXdJbml0KSB7XHJcbiAgICAgIHRoaXMuYWNjb3JkaW9uLnVwZGF0ZVN0YXRlLm5leHQodGhpcyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLnZpZXdJbml0ID0gdHJ1ZTtcclxuICAgIGlmICh0aGlzLm9wZW4pIHtcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5hY2NvcmRpb24udXBkYXRlU3RhdGUubmV4dCh0aGlzKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiAgdG9nZ2xlKCkge1xyXG4gICAgdGhpcy5vcGVuID0gIXRoaXMub3BlbjtcclxuICAgIHRoaXMuYWNjb3JkaW9uLnVwZGF0ZVN0YXRlLm5leHQodGhpcyk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=