import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { BreadcrumbsService } from './breadcrumbs.service';
let BreadcrumbsComponent = class BreadcrumbsComponent {
    constructor(breadcrumbsService) {
        this.breadcrumbsService = breadcrumbsService;
        this.breadcrumbs = [];
        /**
         * Minimal amount of entries the breadcrumb must have to be displayed
         */
        this.minElements = 0;
        this.sub = null;
    }
    ngOnInit() {
        this.sub = this.breadcrumbsService.breadcrumbs.subscribe(list => {
            this.breadcrumbs = list;
        });
    }
    ngOnDestroy() {
        if (this.sub) {
            this.sub.unsubscribe();
        }
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], BreadcrumbsComponent.prototype, "minElements", void 0);
BreadcrumbsComponent = tslib_1.__decorate([
    Component({
        selector: 'rb-breadcrumbs',
        template: "<ng-container *ngIf=\"breadcrumbs.length >= minElements\">\n  <div class=\"limit breadcrumbs-container\">\n    <ul class=\"breadcrumbs\">\n      <li *ngFor=\"let data of breadcrumbs\">\n        <a [routerLink]=\"data.urlSegments\">{{data.title}}</a>\n      </li>\n    </ul>\n    <div class=\"breadcrumbs-right\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <hr class=\"no-margin\">\n</ng-container>\n"
    }),
    tslib_1.__metadata("design:paramtypes", [BreadcrumbsService])
], BreadcrumbsComponent);
export { BreadcrumbsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGluc3QtaW90L2Jvc2NoLWFuZ3VsYXItdWktY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbIm1vbGVjdWxlcy9icmVhZGNydW1icy9icmVhZGNydW1icy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQWMsa0JBQWtCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQU12RSxJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtJQVcvQixZQUFvQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQVQxRCxnQkFBVyxHQUFpQixFQUFFLENBQUM7UUFFL0I7O1dBRUc7UUFDTSxnQkFBVyxHQUFHLENBQUMsQ0FBQztRQUVqQixRQUFHLEdBQUcsSUFBSSxDQUFDO0lBR25CLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM5RCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1osSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUN4QjtJQUNILENBQUM7Q0FDRixDQUFBO0FBbEJVO0lBQVIsS0FBSyxFQUFFOzt5REFBaUI7QUFQZCxvQkFBb0I7SUFKaEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGdCQUFnQjtRQUMxQiwwYUFBMkM7S0FDNUMsQ0FBQzs2Q0FZd0Msa0JBQWtCO0dBWC9DLG9CQUFvQixDQXlCaEM7U0F6Qlksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJyZWFkY3J1bWIsIEJyZWFkY3J1bWJzU2VydmljZSB9IGZyb20gJy4vYnJlYWRjcnVtYnMuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3JiLWJyZWFkY3J1bWJzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2JyZWFkY3J1bWJzLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQnJlYWRjcnVtYnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG5cbiAgYnJlYWRjcnVtYnM6IEJyZWFkY3J1bWJbXSA9IFtdO1xuXG4gIC8qKlxuICAgKiBNaW5pbWFsIGFtb3VudCBvZiBlbnRyaWVzIHRoZSBicmVhZGNydW1iIG11c3QgaGF2ZSB0byBiZSBkaXNwbGF5ZWRcbiAgICovXG4gIEBJbnB1dCgpIG1pbkVsZW1lbnRzID0gMDtcblxuICBwcml2YXRlIHN1YiA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBicmVhZGNydW1ic1NlcnZpY2U6IEJyZWFkY3J1bWJzU2VydmljZSkge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zdWIgPSB0aGlzLmJyZWFkY3J1bWJzU2VydmljZS5icmVhZGNydW1icy5zdWJzY3JpYmUobGlzdCA9PiB7XG4gICAgICB0aGlzLmJyZWFkY3J1bWJzID0gbGlzdDtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIGlmICh0aGlzLnN1Yikge1xuICAgICAgdGhpcy5zdWIudW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==