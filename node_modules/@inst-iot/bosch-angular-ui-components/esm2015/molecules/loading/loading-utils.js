import { Subject } from 'rxjs';
import { takeUntil, tap } from 'rxjs/operators';
export class LoadingEntity {
    constructor(loadingStateAfterFirstSuccess = true) {
        this.loadingStateAfterFirstSuccess = loadingStateAfterFirstSuccess;
        this.runs = 0;
        this.loading = false;
        this.error = null;
        this.result = null;
        this.stopSubject = new Subject();
    }
    /**
     * Tracks the status of an observable
     */
    run(observable) {
        this.runs++;
        if (this.loadingStateAfterFirstSuccess && this.result !== null || this.result === null || this.error) {
            this.loading = true;
            this.result = null;
        }
        this.complete();
        this.error = null;
        return observable.pipe(tap(result => {
            this.loading = false;
            this.result = result;
        }, error => {
            this.loading = false;
            this.error = error;
        }, () => {
            this.loading = false;
        }), takeUntil(this.stopSubject));
    }
    /**
     * This can complete and unsubscribe all observers
     */
    complete() {
        this.stopSubject.next();
    }
    reset() {
        this.complete();
        this.error = null;
        this.loading = false;
        this.result = null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy11dGlscy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpbnN0LWlvdC9ib3NjaC1hbmd1bGFyLXVpLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJtb2xlY3VsZXMvbG9hZGluZy9sb2FkaW5nLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZ0IsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFaEQsTUFBTSxPQUFPLGFBQWE7SUFZeEIsWUFBbUIsZ0NBQWdDLElBQUk7UUFBcEMsa0NBQTZCLEdBQTdCLDZCQUE2QixDQUFPO1FBVnZELFNBQUksR0FBRyxDQUFDLENBQUM7UUFFVCxZQUFPLEdBQUcsS0FBSyxDQUFDO1FBRWhCLFVBQUssR0FBUSxJQUFJLENBQUM7UUFFbEIsV0FBTSxHQUFNLElBQUksQ0FBQztRQUVULGdCQUFXLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztJQUdwQyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxHQUFHLENBQUMsVUFBeUI7UUFDM0IsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ1osSUFBSSxJQUFJLENBQUMsNkJBQTZCLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNwRyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztTQUNwQjtRQUNELElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNsQixPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQ3BCLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNYLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3ZCLENBQUMsRUFBRSxLQUFLLENBQUMsRUFBRTtZQUNULElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLENBQUMsRUFBRSxHQUFHLEVBQUU7WUFDTixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUN2QixDQUFDLENBQUMsRUFDRixTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUM1QixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0gsUUFBUTtRQUNOLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDckIsQ0FBQztDQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSAsICBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YWtlVW50aWwsIHRhcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuZXhwb3J0IGNsYXNzIExvYWRpbmdFbnRpdHk8VD4ge1xuXG4gIHJ1bnMgPSAwO1xuXG4gIGxvYWRpbmcgPSBmYWxzZTtcblxuICBlcnJvcjogYW55ID0gbnVsbDtcblxuICByZXN1bHQ6IFQgPSBudWxsO1xuXG4gIHByaXZhdGUgc3RvcFN1YmplY3QgPSBuZXcgU3ViamVjdCgpO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBsb2FkaW5nU3RhdGVBZnRlckZpcnN0U3VjY2VzcyA9IHRydWUpIHtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmFja3MgdGhlIHN0YXR1cyBvZiBhbiBvYnNlcnZhYmxlXG4gICAqL1xuICBydW4ob2JzZXJ2YWJsZTogT2JzZXJ2YWJsZTxUPik6IE9ic2VydmFibGU8VD4ge1xuICAgIHRoaXMucnVucysrO1xuICAgIGlmICh0aGlzLmxvYWRpbmdTdGF0ZUFmdGVyRmlyc3RTdWNjZXNzICYmIHRoaXMucmVzdWx0ICE9PSBudWxsIHx8IHRoaXMucmVzdWx0ID09PSBudWxsIHx8IHRoaXMuZXJyb3IpIHtcbiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XG4gICAgICB0aGlzLnJlc3VsdCA9IG51bGw7XG4gICAgfVxuICAgIHRoaXMuY29tcGxldGUoKTtcbiAgICB0aGlzLmVycm9yID0gbnVsbDtcbiAgICByZXR1cm4gb2JzZXJ2YWJsZS5waXBlKFxuICAgICAgdGFwKHJlc3VsdCA9PiB7XG4gICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLnJlc3VsdCA9IHJlc3VsdDtcbiAgICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcjtcbiAgICAgIH0sICgpID0+IHtcbiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XG4gICAgICB9KSxcbiAgICAgIHRha2VVbnRpbCh0aGlzLnN0b3BTdWJqZWN0KVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBjYW4gY29tcGxldGUgYW5kIHVuc3Vic2NyaWJlIGFsbCBvYnNlcnZlcnNcbiAgICovXG4gIGNvbXBsZXRlKCkge1xuICAgIHRoaXMuc3RvcFN1YmplY3QubmV4dCgpO1xuICB9XG5cbiAgcmVzZXQoKSB7XG4gICAgdGhpcy5jb21wbGV0ZSgpO1xuICAgIHRoaXMuZXJyb3IgPSBudWxsO1xuICAgIHRoaXMubG9hZGluZyA9IGZhbHNlO1xuICAgIHRoaXMucmVzdWx0ID0gbnVsbDtcbiAgfVxuXG59XG4iXX0=