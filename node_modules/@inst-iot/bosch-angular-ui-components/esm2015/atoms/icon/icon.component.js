import * as tslib_1 from "tslib";
/* tslint:disable */
import { Component, Input } from '@angular/core';
/**
 * @Deprecated use the icon font with rb-ic css class
 */
let IconComponent = class IconComponent {
    constructor() {
        this.basePath = 'assets/img/icons.svg';
    }
    ngOnInit() {
        // if it is MSIE
        if (!!document['documentMode'] && window['XMLHttpRequest']) {
            if (!document.getElementById('rb-icons')) {
                const iconsEl = document.createElement('div');
                iconsEl.id = 'rb-icons';
                iconsEl.style.display = 'none';
                document.body.appendChild(iconsEl);
                const http = new window['XMLHttpRequest']();
                http.onreadystatechange = () => {
                    if (http.readyState == 4 && http.status == 200) {
                        iconsEl.innerHTML = http.responseText;
                    }
                };
                http.open('GET', this.basePath, true);
                http.send();
            }
            this.basePath = '';
        }
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], IconComponent.prototype, "name", void 0);
IconComponent = tslib_1.__decorate([
    Component({
        selector: 'rb-icon',
        template: "<!--<img [src]=\"'assets/images/icons/'+name+'.svg'\" [alt]=\"name\">-->\n\n<svg viewBox=\"0 0 100 100\" class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <use [attr.xlink:href]=\"basePath+'#'+name\"></use>\n</svg>\n",
        styles: ["svg{height:1em;width:1em}"]
    }),
    tslib_1.__metadata("design:paramtypes", [])
], IconComponent);
export { IconComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaW5zdC1pb3QvYm9zY2gtYW5ndWxhci11aS1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiYXRvbXMvaWNvbi9pY29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsb0JBQW9CO0FBQ3BCLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRXpEOztHQUVHO0FBTUgsSUFBYSxhQUFhLEdBQTFCLE1BQWEsYUFBYTtJQU14QjtRQUZBLGFBQVEsR0FBRyxzQkFBc0IsQ0FBQztJQUdsQyxDQUFDO0lBR0QsUUFBUTtRQUNOLGdCQUFnQjtRQUNoQixJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksTUFBTSxDQUFDLGdCQUFnQixDQUFDLEVBQUU7WUFDMUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLEVBQUU7Z0JBRXhDLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzlDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsVUFBVSxDQUFDO2dCQUN4QixPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7Z0JBQy9CLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUVuQyxNQUFNLElBQUksR0FBRyxJQUFJLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUM7Z0JBQzVDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxHQUFHLEVBQUU7b0JBQzdCLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxHQUFHLEVBQUU7d0JBQzlDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztxQkFDdkM7Z0JBQ0gsQ0FBQyxDQUFDO2dCQUNGLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ3RDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQzthQUNiO1lBRUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7U0FDcEI7SUFDSCxDQUFDO0NBQ0YsQ0FBQTtBQS9CVTtJQUFSLEtBQUssRUFBRTs7MkNBQWM7QUFGWCxhQUFhO0lBTHpCLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxTQUFTO1FBQ25CLHVSQUFvQzs7S0FFckMsQ0FBQzs7R0FDVyxhQUFhLENBaUN6QjtTQWpDWSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGUgKi9cclxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG4vKipcclxuICogQERlcHJlY2F0ZWQgdXNlIHRoZSBpY29uIGZvbnQgd2l0aCByYi1pYyBjc3MgY2xhc3NcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAncmItaWNvbicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2ljb24uY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2ljb24uY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSWNvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZztcclxuXHJcbiAgYmFzZVBhdGggPSAnYXNzZXRzL2ltZy9pY29ucy5zdmcnO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcblxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIC8vIGlmIGl0IGlzIE1TSUVcclxuICAgIGlmICghIWRvY3VtZW50Wydkb2N1bWVudE1vZGUnXSAmJiB3aW5kb3dbJ1hNTEh0dHBSZXF1ZXN0J10pIHtcclxuICAgICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmItaWNvbnMnKSkge1xyXG5cclxuICAgICAgICBjb25zdCBpY29uc0VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgaWNvbnNFbC5pZCA9ICdyYi1pY29ucyc7XHJcbiAgICAgICAgaWNvbnNFbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaWNvbnNFbCk7XHJcblxyXG4gICAgICAgIGNvbnN0IGh0dHAgPSBuZXcgd2luZG93WydYTUxIdHRwUmVxdWVzdCddKCk7XHJcbiAgICAgICAgaHR0cC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKSA9PiB7IC8vQ2FsbCBhIGZ1bmN0aW9uIHdoZW4gdGhlIHN0YXRlIGNoYW5nZXMuXHJcbiAgICAgICAgICBpZiAoaHR0cC5yZWFkeVN0YXRlID09IDQgJiYgaHR0cC5zdGF0dXMgPT0gMjAwKSB7XHJcbiAgICAgICAgICAgIGljb25zRWwuaW5uZXJIVE1MID0gaHR0cC5yZXNwb25zZVRleHQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBodHRwLm9wZW4oJ0dFVCcsIHRoaXMuYmFzZVBhdGgsIHRydWUpO1xyXG4gICAgICAgIGh0dHAuc2VuZCgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLmJhc2VQYXRoID0gJyc7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==