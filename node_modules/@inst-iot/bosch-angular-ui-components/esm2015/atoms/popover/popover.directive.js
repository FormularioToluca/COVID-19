import * as tslib_1 from "tslib";
import { ComponentFactoryResolver, Directive, HostListener, Input, ViewContainerRef } from '@angular/core';
import { PopoverComponent } from './popover.component';
let PopoverDirective = class PopoverDirective {
    constructor(factoryResolver, viewContainerRef) {
        this.factoryResolver = factoryResolver;
        this.viewContainerRef = viewContainerRef;
        this.position = 'bottom';
        this.componentRef = null;
        this.closeSub = null;
    }
    ngOnDestroy() {
        this.closePopOver();
    }
    set template(tpl) {
        this.content = tpl;
    }
    onClick(e) {
        e.preventDefault();
        this.openPopOver();
    }
    openPopOver() {
        if (this.componentRef) {
            this.closePopOver();
            return;
        }
        const componentFactory = this.factoryResolver.resolveComponentFactory(PopoverComponent);
        this.componentRef = this.viewContainerRef.createComponent(componentFactory);
        this.componentRef.instance.anchor = this.anchor || this.viewContainerRef.element;
        this.componentRef.instance.content = this.content;
        this.componentRef.instance.primaryPos = this.position;
        this.closeSub = this.componentRef.instance.close.subscribe(() => {
            this.closePopOver();
        });
        this.viewContainerRef.element.nativeElement.classList.add('open');
    }
    closePopOver() {
        if (this.componentRef) {
            if (this.closeSub) {
                this.closeSub.unsubscribe();
            }
            this.viewContainerRef.element.nativeElement.classList.remove('open');
            const viewIndex = this.viewContainerRef.indexOf(this.componentRef.hostView);
            if (viewIndex !== -1) {
                this.viewContainerRef.remove(viewIndex);
            }
            this.componentRef = null;
        }
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], PopoverDirective.prototype, "position", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], PopoverDirective.prototype, "anchor", void 0);
tslib_1.__decorate([
    Input('rbPopover'),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], PopoverDirective.prototype, "template", null);
tslib_1.__decorate([
    HostListener('click', ['$event']),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [MouseEvent]),
    tslib_1.__metadata("design:returntype", void 0)
], PopoverDirective.prototype, "onClick", null);
PopoverDirective = tslib_1.__decorate([
    Directive({
        selector: '[rbPopover]',
        exportAs: 'rbPopover'
    }),
    tslib_1.__metadata("design:paramtypes", [ComponentFactoryResolver,
        ViewContainerRef])
], PopoverDirective);
export { PopoverDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaW5zdC1pb3QvYm9zY2gtYW5ndWxhci11aS1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiYXRvbXMvcG9wb3Zlci9wb3BvdmVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLHdCQUF3QixFQUFnQixTQUFTLEVBQWMsWUFBWSxFQUFFLEtBQUssRUFDbEYsZ0JBQWdCLEVBQ2pCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBTXZELElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWdCO0lBVzNCLFlBQW9CLGVBQXlDLEVBQ3pDLGdCQUFrQztRQURsQyxvQkFBZSxHQUFmLGVBQWUsQ0FBMEI7UUFDekMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQVY3QyxhQUFRLEdBQXdDLFFBQVEsQ0FBQztRQUtsRSxpQkFBWSxHQUFtQyxJQUFJLENBQUM7UUFFcEQsYUFBUSxHQUFHLElBQUksQ0FBQztJQUloQixDQUFDO0lBR0QsV0FBVztRQUNULElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRW1CLElBQUksUUFBUSxDQUFDLEdBQThCO1FBQzdELElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO0lBQ3JCLENBQUM7SUFHRCxPQUFPLENBQUMsQ0FBYTtRQUNuQixDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNwQixPQUFPO1NBQ1I7UUFDRCxNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsdUJBQXVCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUV4RixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUM1RSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDO1FBQ2pGLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ2xELElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3RELElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7WUFDOUQsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3RCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUVwRSxDQUFDO0lBRUQsWUFBWTtRQUNWLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLENBQUM7YUFDN0I7WUFDRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3JFLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM1RSxJQUFJLFNBQVMsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDcEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQzthQUN6QztZQUNELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1NBQzFCO0lBQ0gsQ0FBQztDQUVGLENBQUE7QUE1RFU7SUFBUixLQUFLLEVBQUU7O2tEQUEwRDtBQUN6RDtJQUFSLEtBQUssRUFBRTs7Z0RBQWtDO0FBaUJ0QjtJQUFuQixLQUFLLENBQUMsV0FBVyxDQUFDOzs7Z0RBRWxCO0FBR0Q7SUFEQyxZQUFZLENBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7OzZDQUN2QixVQUFVOzsrQ0FHcEI7QUE1QlUsZ0JBQWdCO0lBSjVCLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxhQUFhO1FBQ3ZCLFFBQVEsRUFBRSxXQUFXO0tBQ3RCLENBQUM7NkNBWXFDLHdCQUF3QjtRQUN2QixnQkFBZ0I7R0FaM0MsZ0JBQWdCLENBOEQ1QjtTQTlEWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgQ29tcG9uZW50UmVmLCBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEhvc3RMaXN0ZW5lciwgSW5wdXQsIE9uRGVzdHJveSwgVGVtcGxhdGVSZWYsXHJcbiAgVmlld0NvbnRhaW5lclJlZlxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQb3BvdmVyQ29tcG9uZW50IH0gZnJvbSAnLi9wb3BvdmVyLmNvbXBvbmVudCc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tyYlBvcG92ZXJdJyxcclxuICBleHBvcnRBczogJ3JiUG9wb3ZlcidcclxufSlcclxuZXhwb3J0IGNsYXNzIFBvcG92ZXJEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xyXG5cclxuICBASW5wdXQoKSBwb3NpdGlvbjogJ2JvdHRvbScgfCAndG9wJyB8ICdsZWZ0JyB8ICdyaWdodCcgPSAnYm90dG9tJztcclxuICBASW5wdXQoKSBhbmNob3I6IEVsZW1lbnRSZWYgfCBIVE1MRWxlbWVudDtcclxuXHJcbiAgY29udGVudDogVGVtcGxhdGVSZWY8YW55PiB8IHN0cmluZztcclxuXHJcbiAgY29tcG9uZW50UmVmOiBDb21wb25lbnRSZWY8UG9wb3ZlckNvbXBvbmVudD4gPSBudWxsO1xyXG5cclxuICBjbG9zZVN1YiA9IG51bGw7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZmFjdG9yeVJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXHJcbiAgICAgICAgICAgICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmKSB7XHJcbiAgfVxyXG5cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLmNsb3NlUG9wT3ZlcigpO1xyXG4gIH1cclxuXHJcbiAgQElucHV0KCdyYlBvcG92ZXInKSBzZXQgdGVtcGxhdGUodHBsOiBUZW1wbGF0ZVJlZjxhbnk+IHwgc3RyaW5nKSB7XHJcbiAgICB0aGlzLmNvbnRlbnQgPSB0cGw7XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXHJcbiAgb25DbGljayhlOiBNb3VzZUV2ZW50KSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB0aGlzLm9wZW5Qb3BPdmVyKCk7XHJcbiAgfVxyXG5cclxuICBvcGVuUG9wT3ZlcigpIHtcclxuICAgIGlmICh0aGlzLmNvbXBvbmVudFJlZikge1xyXG4gICAgICB0aGlzLmNsb3NlUG9wT3ZlcigpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBjb21wb25lbnRGYWN0b3J5ID0gdGhpcy5mYWN0b3J5UmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoUG9wb3ZlckNvbXBvbmVudCk7XHJcblxyXG4gICAgdGhpcy5jb21wb25lbnRSZWYgPSB0aGlzLnZpZXdDb250YWluZXJSZWYuY3JlYXRlQ29tcG9uZW50KGNvbXBvbmVudEZhY3RvcnkpO1xyXG4gICAgdGhpcy5jb21wb25lbnRSZWYuaW5zdGFuY2UuYW5jaG9yID0gdGhpcy5hbmNob3IgfHwgdGhpcy52aWV3Q29udGFpbmVyUmVmLmVsZW1lbnQ7XHJcbiAgICB0aGlzLmNvbXBvbmVudFJlZi5pbnN0YW5jZS5jb250ZW50ID0gdGhpcy5jb250ZW50O1xyXG4gICAgdGhpcy5jb21wb25lbnRSZWYuaW5zdGFuY2UucHJpbWFyeVBvcyA9IHRoaXMucG9zaXRpb247XHJcbiAgICB0aGlzLmNsb3NlU3ViID0gdGhpcy5jb21wb25lbnRSZWYuaW5zdGFuY2UuY2xvc2Uuc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgdGhpcy5jbG9zZVBvcE92ZXIoKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy52aWV3Q29udGFpbmVyUmVmLmVsZW1lbnQubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdvcGVuJyk7XHJcblxyXG4gIH1cclxuXHJcbiAgY2xvc2VQb3BPdmVyKCkge1xyXG4gICAgaWYgKHRoaXMuY29tcG9uZW50UmVmKSB7XHJcbiAgICAgIGlmICh0aGlzLmNsb3NlU3ViKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZVN1Yi51bnN1YnNjcmliZSgpO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMudmlld0NvbnRhaW5lclJlZi5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnb3BlbicpO1xyXG4gICAgICBjb25zdCB2aWV3SW5kZXggPSB0aGlzLnZpZXdDb250YWluZXJSZWYuaW5kZXhPZih0aGlzLmNvbXBvbmVudFJlZi5ob3N0Vmlldyk7XHJcbiAgICAgIGlmICh2aWV3SW5kZXggIT09IC0xKSB7XHJcbiAgICAgICAgdGhpcy52aWV3Q29udGFpbmVyUmVmLnJlbW92ZSh2aWV3SW5kZXgpO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuY29tcG9uZW50UmVmID0gbnVsbDtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiJdfQ==