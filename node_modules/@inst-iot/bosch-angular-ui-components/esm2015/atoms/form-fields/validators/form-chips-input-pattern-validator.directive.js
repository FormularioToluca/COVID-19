import * as tslib_1 from "tslib";
var FormChipsInputPatternValidatorDirective_1;
import { Directive, forwardRef, Input } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
/* tslint:disable:directive-selector */
let FormChipsInputPatternValidatorDirective = FormChipsInputPatternValidatorDirective_1 = class FormChipsInputPatternValidatorDirective {
    constructor() {
    }
    validate(c) {
        let hasInvalid = false;
        if (c.value && this.pattern) {
            c.value.forEach(el => {
                if (!el.match(this.pattern)) {
                    hasInvalid = true;
                }
            });
            if (hasInvalid) {
                return { 'pattern': true };
            }
            else {
                return null;
            }
        }
        return null;
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], FormChipsInputPatternValidatorDirective.prototype, "pattern", void 0);
FormChipsInputPatternValidatorDirective = FormChipsInputPatternValidatorDirective_1 = tslib_1.__decorate([
    Directive({
        selector: 'rb-form-chips-input[pattern]',
        providers: [{
                provide: NG_VALIDATORS,
                useExisting: forwardRef(() => FormChipsInputPatternValidatorDirective_1),
                multi: true
            }]
    }),
    tslib_1.__metadata("design:paramtypes", [])
], FormChipsInputPatternValidatorDirective);
export { FormChipsInputPatternValidatorDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1jaGlwcy1pbnB1dC1wYXR0ZXJuLXZhbGlkYXRvci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaW5zdC1pb3QvYm9zY2gtYW5ndWxhci11aS1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiYXRvbXMvZm9ybS1maWVsZHMvdmFsaWRhdG9ycy9mb3JtLWNoaXBzLWlucHV0LXBhdHRlcm4tdmFsaWRhdG9yLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQW1CLGFBQWEsRUFBK0IsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3Rix1Q0FBdUM7QUFTdkMsSUFBYSx1Q0FBdUMsK0NBQXBELE1BQWEsdUNBQXVDO0lBSWxEO0lBQ0EsQ0FBQztJQUdELFFBQVEsQ0FBQyxDQUFrQjtRQUN6QixJQUFJLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDdkIsSUFBSyxDQUFDLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDM0IsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUU7Z0JBQ3BCLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtvQkFDekIsVUFBVSxHQUFHLElBQUksQ0FBQztpQkFDckI7WUFDRixDQUFDLENBQUMsQ0FBQztZQUNKLElBQUksVUFBVSxFQUFFO2dCQUNkLE9BQU8sRUFBQyxTQUFTLEVBQUUsSUFBSSxFQUFDLENBQUM7YUFDMUI7aUJBQU07Z0JBQ0wsT0FBTyxJQUFJLENBQUM7YUFDYjtTQUNGO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBRUYsQ0FBQTtBQXZCVTtJQUFSLEtBQUssRUFBRTs7d0VBQVM7QUFGTix1Q0FBdUM7SUFSbkQsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLDhCQUE4QjtRQUN4QyxTQUFTLEVBQUUsQ0FBQztnQkFDVixPQUFPLEVBQUUsYUFBYTtnQkFDdEIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx5Q0FBdUMsQ0FBQztnQkFDdEUsS0FBSyxFQUFFLElBQUk7YUFDWixDQUFDO0tBQ0gsQ0FBQzs7R0FDVyx1Q0FBdUMsQ0F5Qm5EO1NBekJZLHVDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgZm9yd2FyZFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBOR19WQUxJREFUT1JTLCBWYWxpZGF0aW9uRXJyb3JzLCBWYWxpZGF0b3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG4vKiB0c2xpbnQ6ZGlzYWJsZTpkaXJlY3RpdmUtc2VsZWN0b3IgKi9cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdyYi1mb3JtLWNoaXBzLWlucHV0W3BhdHRlcm5dJyxcclxuICBwcm92aWRlcnM6IFt7XHJcbiAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxyXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRm9ybUNoaXBzSW5wdXRQYXR0ZXJuVmFsaWRhdG9yRGlyZWN0aXZlKSxcclxuICAgIG11bHRpOiB0cnVlXHJcbiAgfV1cclxufSlcclxuZXhwb3J0IGNsYXNzIEZvcm1DaGlwc0lucHV0UGF0dGVyblZhbGlkYXRvckRpcmVjdGl2ZSBpbXBsZW1lbnRzIFZhbGlkYXRvciB7XHJcblxyXG4gIEBJbnB1dCgpIHBhdHRlcm47XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcblxyXG4gIHZhbGlkYXRlKGM6IEFic3RyYWN0Q29udHJvbCk6IFZhbGlkYXRpb25FcnJvcnMgfCBudWxsIHtcclxuICAgIGxldCBoYXNJbnZhbGlkID0gZmFsc2U7XHJcbiAgICBpZiAoIGMudmFsdWUgJiYgdGhpcy5wYXR0ZXJuKSB7XHJcbiAgICAgICBjLnZhbHVlLmZvckVhY2goZWwgPT4ge1xyXG4gICAgICAgIGlmICghZWwubWF0Y2godGhpcy5wYXR0ZXJuKSkge1xyXG4gICAgICAgICAgICBoYXNJbnZhbGlkID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICB9KTtcclxuICAgICAgaWYgKGhhc0ludmFsaWQpIHtcclxuICAgICAgICByZXR1cm4geydwYXR0ZXJuJzogdHJ1ZX07XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbiJdfQ==