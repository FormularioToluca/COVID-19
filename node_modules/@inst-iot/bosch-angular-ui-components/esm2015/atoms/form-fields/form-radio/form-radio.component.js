import * as tslib_1 from "tslib";
var FormRadioComponent_1;
import { Component, ContentChildren, ElementRef, forwardRef, Input, QueryList, Renderer2, TemplateRef, ViewChild } from '@angular/core';
import { FormValidationMessageDirective } from '../form-validation-message.directive';
import { emptyFunction } from '../forms-util';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
let FormRadioComponent = FormRadioComponent_1 = class FormRadioComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this.id = 'radio.' + Math.random();
        this.label = null;
        this.onChange = emptyFunction;
        this.onTouched = emptyFunction;
    }
    updateValue(isChecked) {
        if (isChecked) {
            this.onChange(this.value);
        }
    }
    isLabelTemplate() {
        return this.label instanceof TemplateRef;
    }
    writeValue(value) {
        if (value === this.value) {
            this.renderer.setProperty(this.input.nativeElement, 'checked', true);
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.renderer.setProperty(this.input.nativeElement, 'disabled', isDisabled);
    }
    isReadonly() {
        return !!(this.readonly === '' || this.readonly);
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], FormRadioComponent.prototype, "required", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean)
], FormRadioComponent.prototype, "noValidation", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], FormRadioComponent.prototype, "name", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], FormRadioComponent.prototype, "label", void 0);
tslib_1.__decorate([
    ViewChild('input', { static: true }),
    tslib_1.__metadata("design:type", ElementRef)
], FormRadioComponent.prototype, "input", void 0);
tslib_1.__decorate([
    ContentChildren(FormValidationMessageDirective),
    tslib_1.__metadata("design:type", QueryList)
], FormRadioComponent.prototype, "messages", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], FormRadioComponent.prototype, "value", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], FormRadioComponent.prototype, "readonly", void 0);
FormRadioComponent = FormRadioComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'rb-form-radio',
        template: "<div class=\"input-wrapper\">\r\n  <input type=\"radio\" [id]=\"id + 'input'\" [name]=\"name\" [readonly]=\"readonly\"\r\n         (click)=\"updateValue($event.target.checked)\" #input>\r\n  <label [for]=\"id + 'input'\">  {{!isLabelTemplate() ? label : ''}}</label>\r\n</div>\r\n\r\n<rb-form-errors [messages]=\"messages\"></rb-form-errors>\r\n",
        providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FormRadioComponent_1), multi: true }]
    }),
    tslib_1.__metadata("design:paramtypes", [Renderer2])
], FormRadioComponent);
export { FormRadioComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1yYWRpby5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaW5zdC1pb3QvYm9zY2gtYW5ndWxhci11aS1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiYXRvbXMvZm9ybS1maWVsZHMvZm9ybS1yYWRpby9mb3JtLXJhZGlvLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsZUFBZSxFQUNmLFVBQVUsRUFBRSxVQUFVLEVBQ3RCLEtBQUssRUFDTCxTQUFTLEVBQ1QsU0FBUyxFQUNULFdBQVcsRUFDWCxTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5QyxPQUFPLEVBQXdCLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFPekUsSUFBYSxrQkFBa0IsMEJBQS9CLE1BQWEsa0JBQWtCO0lBcUI3QixZQUFvQixRQUFtQjtRQUFuQixhQUFRLEdBQVIsUUFBUSxDQUFXO1FBbkJ2QyxPQUFFLEdBQUcsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUtyQixVQUFLLEdBQThCLElBQUksQ0FBQztRQVdqRCxhQUFRLEdBQUcsYUFBYSxDQUFDO1FBQ3pCLGNBQVMsR0FBRyxhQUFhLENBQUM7SUFHMUIsQ0FBQztJQUVELFdBQVcsQ0FBQyxTQUFrQjtRQUM1QixJQUFJLFNBQVMsRUFBRTtZQUNiLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzNCO0lBRUgsQ0FBQztJQUVELGVBQWU7UUFDYixPQUFPLElBQUksQ0FBQyxLQUFLLFlBQVksV0FBVyxDQUFDO0lBQzNDLENBQUM7SUFFRCxVQUFVLENBQUMsS0FBVTtRQUNuQixJQUFJLEtBQUssS0FBSyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ3hCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUN0RTtJQUNILENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxFQUFrQjtRQUNqQyxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsaUJBQWlCLENBQUMsRUFBWTtRQUM1QixJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsZ0JBQWdCLENBQUMsVUFBbUI7UUFDbEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsVUFBVSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQzlFLENBQUM7SUFFRCxVQUFVO1FBQ1IsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxLQUFLLEVBQUUsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkQsQ0FBQztDQUVGLENBQUE7QUF0RFU7SUFBUixLQUFLLEVBQUU7O29EQUFtQjtBQUNsQjtJQUFSLEtBQUssRUFBRTs7d0RBQXVCO0FBQ3RCO0lBQVIsS0FBSyxFQUFFOztnREFBYztBQUViO0lBQVIsS0FBSyxFQUFFOztpREFBeUM7QUFHYjtJQUFuQyxTQUFTLENBQUMsT0FBTyxFQUFFLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQyxDQUFDO3NDQUFRLFVBQVU7aURBQUM7QUFFTDtJQUFoRCxlQUFlLENBQUMsOEJBQThCLENBQUM7c0NBQVcsU0FBUztvREFBaUM7QUFFNUY7SUFBUixLQUFLLEVBQUU7O2lEQUFZO0FBRVg7SUFBUixLQUFLLEVBQUU7O29EQUFVO0FBaEJQLGtCQUFrQjtJQUw5QixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsZUFBZTtRQUN6QixxV0FBMEM7UUFDMUMsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxvQkFBa0IsQ0FBQyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUMsQ0FBQztLQUMxRyxDQUFDOzZDQXNCOEIsU0FBUztHQXJCNUIsa0JBQWtCLENBeUQ5QjtTQXpEWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENvbXBvbmVudCxcclxuICBDb250ZW50Q2hpbGRyZW4sXHJcbiAgRWxlbWVudFJlZiwgZm9yd2FyZFJlZixcclxuICBJbnB1dCxcclxuICBRdWVyeUxpc3QsXHJcbiAgUmVuZGVyZXIyLFxyXG4gIFRlbXBsYXRlUmVmLFxyXG4gIFZpZXdDaGlsZFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb3JtVmFsaWRhdGlvbk1lc3NhZ2VEaXJlY3RpdmUgfSBmcm9tICcuLi9mb3JtLXZhbGlkYXRpb24tbWVzc2FnZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBlbXB0eUZ1bmN0aW9uIH0gZnJvbSAnLi4vZm9ybXMtdXRpbCc7XHJcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAncmItZm9ybS1yYWRpbycsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2Zvcm0tcmFkaW8uY29tcG9uZW50Lmh0bWwnLFxyXG4gIHByb3ZpZGVyczogW3twcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUiwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRm9ybVJhZGlvQ29tcG9uZW50KSwgbXVsdGk6IHRydWV9XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRm9ybVJhZGlvQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xyXG5cclxuICBpZCA9ICdyYWRpby4nICsgTWF0aC5yYW5kb20oKTtcclxuICBASW5wdXQoKSByZXF1aXJlZDogYm9vbGVhbjtcclxuICBASW5wdXQoKSBub1ZhbGlkYXRpb246IGJvb2xlYW47XHJcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PiA9IG51bGw7XHJcblxyXG5cclxuICBAVmlld0NoaWxkKCdpbnB1dCcsIHtzdGF0aWM6IHRydWV9KSBpbnB1dDogRWxlbWVudFJlZjtcclxuXHJcbiAgQENvbnRlbnRDaGlsZHJlbihGb3JtVmFsaWRhdGlvbk1lc3NhZ2VEaXJlY3RpdmUpIG1lc3NhZ2VzOiBRdWVyeUxpc3Q8Rm9ybVZhbGlkYXRpb25NZXNzYWdlRGlyZWN0aXZlPjtcclxuXHJcbiAgQElucHV0KCkgdmFsdWU6IGFueTtcclxuXHJcbiAgQElucHV0KCkgcmVhZG9ubHk7XHJcblxyXG4gIG9uQ2hhbmdlID0gZW1wdHlGdW5jdGlvbjtcclxuICBvblRvdWNoZWQgPSBlbXB0eUZ1bmN0aW9uO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHtcclxuICB9XHJcblxyXG4gIHVwZGF0ZVZhbHVlKGlzQ2hlY2tlZDogYm9vbGVhbikge1xyXG4gICAgaWYgKGlzQ2hlY2tlZCkge1xyXG4gICAgICB0aGlzLm9uQ2hhbmdlKHRoaXMudmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG4gIGlzTGFiZWxUZW1wbGF0ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLmxhYmVsIGluc3RhbmNlb2YgVGVtcGxhdGVSZWY7XHJcbiAgfVxyXG5cclxuICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkIHtcclxuICAgIGlmICh2YWx1ZSA9PT0gdGhpcy52YWx1ZSkge1xyXG4gICAgICB0aGlzLnJlbmRlcmVyLnNldFByb3BlcnR5KHRoaXMuaW5wdXQubmF0aXZlRWxlbWVudCwgJ2NoZWNrZWQnLCB0cnVlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJlZ2lzdGVyT25DaGFuZ2UoZm46IChfOiBhbnkpID0+IHt9KTogdm9pZCB7XHJcbiAgICB0aGlzLm9uQ2hhbmdlID0gZm47XHJcbiAgfVxyXG5cclxuICByZWdpc3Rlck9uVG91Y2hlZChmbjogKCkgPT4ge30pOiB2b2lkIHtcclxuICAgIHRoaXMub25Ub3VjaGVkID0gZm47XHJcbiAgfVxyXG5cclxuICBzZXREaXNhYmxlZFN0YXRlKGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgIHRoaXMucmVuZGVyZXIuc2V0UHJvcGVydHkodGhpcy5pbnB1dC5uYXRpdmVFbGVtZW50LCAnZGlzYWJsZWQnLCBpc0Rpc2FibGVkKTtcclxuICB9XHJcblxyXG4gIGlzUmVhZG9ubHkoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gISEodGhpcy5yZWFkb25seSA9PT0gJycgfHwgdGhpcy5yZWFkb25seSk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=