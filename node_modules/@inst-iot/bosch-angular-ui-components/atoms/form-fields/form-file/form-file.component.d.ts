import { ElementRef, EventEmitter, QueryList, Renderer2, TemplateRef } from '@angular/core';
import { FormValidationMessageDirective } from '../form-validation-message.directive';
import { ControlValueAccessor } from '@angular/forms';
import { emptyFunction } from '../forms-util';
export declare class FormFileComponent implements ControlValueAccessor {
    private renderer;
    private elementRef;
    label: string | TemplateRef<any>;
    name: string;
    placeholder: string;
    filesChange: EventEmitter<File[]>;
    id: string;
    accept: string;
    multiple: any;
    file: ElementRef;
    messages: QueryList<FormValidationMessageDirective>;
    onChange: typeof emptyFunction;
    onTouched: typeof emptyFunction;
    filePreview: string;
    constructor(renderer: Renderer2, elementRef: ElementRef);
    checkSelectedFiles(): void;
    isLabelTemplate(): boolean;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
}
