import { ElementRef, QueryList, Renderer2, TemplateRef } from '@angular/core';
import { FormValidationMessageDirective } from '../form-validation-message.directive';
import { emptyFunction } from '../forms-util';
import { ControlValueAccessor } from '@angular/forms';
export declare class FormRadioComponent implements ControlValueAccessor {
    private renderer;
    id: string;
    required: boolean;
    noValidation: boolean;
    name: string;
    label: string | TemplateRef<any>;
    input: ElementRef;
    messages: QueryList<FormValidationMessageDirective>;
    value: any;
    readonly: any;
    onChange: typeof emptyFunction;
    onTouched: typeof emptyFunction;
    constructor(renderer: Renderer2);
    updateValue(isChecked: boolean): void;
    isLabelTemplate(): boolean;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => {}): void;
    registerOnTouched(fn: () => {}): void;
    setDisabledState(isDisabled: boolean): void;
    isReadonly(): boolean;
}
