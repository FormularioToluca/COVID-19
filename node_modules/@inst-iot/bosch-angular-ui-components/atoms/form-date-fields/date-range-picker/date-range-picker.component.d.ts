import { ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import flatpickr from 'flatpickr';
import { ControlValueAccessor } from '@angular/forms';
import { AbsolutePickerValue, DateRangePickerPreset, PickerMode, PickerValue, RelativePickerValue } from './date-range-picker.model';
export declare class DateRangePickerComponent implements OnInit, OnDestroy, ControlValueAccessor {
    private renderer;
    private elementRef;
    private defaultOptions;
    name: any;
    readonly: any;
    allowRelative: boolean;
    presets: DateRangePickerPreset[];
    startLabel: string | TemplateRef<any>;
    endLabel: string | TemplateRef<any>;
    absoluteLabel: string | TemplateRef<any>;
    relativeLabel: string | TemplateRef<any>;
    presetsLabel: string | TemplateRef<any>;
    tab: string;
    mode: PickerMode;
    private pickerStart;
    private pickerEnd;
    /**
     * Options for Flatpickr
     * @see https://flatpickr.js.org/options/
     */
    options: flatpickr.Options.Options;
    private onChange;
    private onTouched;
    private absoluteValue;
    private initialTabChange;
    relativeValue: RelativePickerValue;
    private lastModified;
    constructor(renderer: Renderer2, elementRef: ElementRef, defaultOptions: any);
    ngOnInit(): void;
    ngOnDestroy(): void;
    initStartDateElement: any;
    initEndDateElement: any;
    tabChanged(tabId: string): void;
    updateAbsoluteValueFromPicker(value: AbsolutePickerValue): void;
    updateRelativeValue(value: any, index: any): void;
    notifyChange(value: any): void;
    writeValue(value: PickerValue): void;
    private updatePicker;
    registerOnChange(fn: (_: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    findPreset(value: PickerValue): DateRangePickerPreset;
    isPreset(p: DateRangePickerPreset): boolean;
    setPreset(preset: DateRangePickerPreset): void;
    getRelativeFromAbsolute(value: AbsolutePickerValue, byDay?: boolean): RelativePickerValue;
}
