import { InjectionToken, PipeTransform } from '@angular/core';
export declare const ERROR_FORMATTER: InjectionToken<ErrorFormatter>;
export declare class DetailedError implements Error {
    message: any;
    details?: any;
    name: string;
    constructor(message: any, details?: any);
    toString(): string;
}
export interface ErrorFormatter extends PipeTransform {
    /**
     * Check if the error can be handled.
     * If null is returned, the next Formatter will be tried.
     */
    transform(error: any): string | null;
    /**
     * Gets details of an error
     */
    getDetails?(error: any): string;
}
export declare class DefaultErrorFormatter implements ErrorFormatter {
    getDetails(error: any): string;
    transform(error: any): string | null;
}
export declare const DEFAULT_ERROR_FORMATTER: DefaultErrorFormatter;
