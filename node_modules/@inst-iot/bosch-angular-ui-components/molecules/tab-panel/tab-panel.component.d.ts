import { AfterViewInit, DoCheck, ElementRef, EventEmitter, InjectionToken, OnChanges, QueryList, Renderer2, SimpleChanges } from '@angular/core';
import { TabPanelItemDirective } from './tab-panel-item.directive';
import { Observable } from 'rxjs';
export interface TabPanelResolver {
    /**
     * Resolves a tab by id and returns an Observable, that emits true, when it was found.
     */
    resolveTab(id: string): Observable<boolean>;
}
export declare const TAB_PANEL_RESOLVER: InjectionToken<TabPanelResolver>;
/**
 * A very powerful tab panel component.
 * It can handle dynamic tabs, the tab bar can accept all kind of types. See: TabPanelItemType
 * When you provide `outletName`, you should provide your router config with such an entry to enable the outlet routing:
 * children: [{path: ':id', outlet: 'yourOutletName', component: TabPanelComponent}]
 */
export declare class TabPanelComponent implements AfterViewInit, DoCheck, OnChanges {
    private renderer;
    private element;
    private tabPanelResolver;
    tabChanged: EventEmitter<string>;
    /**
     * change this input to an tab id to open that tab.
     */
    tab: string;
    panelPlaceholder: ElementRef;
    tabPanel: ElementRef;
    outletName: string;
    tabItems: TabPanelItemDirective[];
    /**
     * Whether tabs that were opened once, should be kept in the DOM
     * when switching away from them. Or should they be removed from
     * DOM when switched to another tab?
     */
    destroyTabs: boolean;
    renderHiddenTabs: boolean;
    tabItemsLeft: TabPanelItemDirective[];
    tabItemsCenter: TabPanelItemDirective[];
    tabItemsRight: TabPanelItemDirective[];
    lastHeight: number;
    constructor(renderer: Renderer2, element: ElementRef, tabPanelResolver: TabPanelResolver);
    tabItemsQuery: QueryList<TabPanelItemDirective>;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
    showFirstTab(): void;
    /**
     * Can be used to show a certain tab.
     */
    showTab(id: string): void;
    private deactivateAndShowTab;
    onResize(): void;
}
