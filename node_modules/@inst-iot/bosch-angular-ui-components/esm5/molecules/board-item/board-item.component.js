import * as tslib_1 from "tslib";
import { Component, ContentChild, ContentChildren, Input, QueryList, TemplateRef } from '@angular/core';
import { BoardItemBodyDirective, BoardItemCountDirective, BoardItemIconDirective } from './board-item.directive';
var BoardItemComponent = /** @class */ (function () {
    function BoardItemComponent() {
    }
    BoardItemComponent.prototype.ngOnInit = function () {
    };
    BoardItemComponent.prototype.isTemplateStatus = function () {
        return this.statusIcon instanceof TemplateRef;
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], BoardItemComponent.prototype, "statusIcon", void 0);
    tslib_1.__decorate([
        ContentChild(BoardItemIconDirective, { static: false }),
        tslib_1.__metadata("design:type", BoardItemIconDirective)
    ], BoardItemComponent.prototype, "icon", void 0);
    tslib_1.__decorate([
        ContentChild(BoardItemBodyDirective, { static: false }),
        tslib_1.__metadata("design:type", BoardItemBodyDirective)
    ], BoardItemComponent.prototype, "body", void 0);
    tslib_1.__decorate([
        ContentChildren(BoardItemCountDirective),
        tslib_1.__metadata("design:type", QueryList)
    ], BoardItemComponent.prototype, "counts", void 0);
    BoardItemComponent = tslib_1.__decorate([
        Component({
            selector: 'rb-board-item',
            template: "<div class=\"board-item\">\n  <div class=\"board-item-body\">\n    <div class=\"board-item-icon\" *ngIf=\"icon\">\n      <ng-container *ngTemplateOutlet=\"icon.templateRef\"></ng-container>\n    </div>\n    <div class=\"board-item-content\">\n      <ng-container *ngTemplateOutlet=\"body?.templateRef\"></ng-container>\n    </div>\n  </div>\n  <div *ngIf=\"counts && counts.length\" class=\"board-item-counts\">\n    <ng-container *ngFor=\"let item of counts\">\n      <div class=\"board-item-count\">\n        <ng-container *ngTemplateOutlet=\"item.templateRef\"></ng-container>\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"board-item-status\" *ngIf=\"statusIcon\">\n    <div class=\"board-item-status-icon\">\n      <ng-container *ngIf=\"isTemplateStatus()\">\n        <ng-container *ngTemplateOutlet=\"statusIcon\"></ng-container>\n      </ng-container>\n      <rb-icon *ngIf=\"!isTemplateStatus()\" [name]=\"statusIcon\"></rb-icon>\n    </div>\n  </div>\n</div>\n"
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], BoardItemComponent);
    return BoardItemComponent;
}());
export { BoardItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9hcmQtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaW5zdC1pb3QvYm9zY2gtYW5ndWxhci11aS1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibW9sZWN1bGVzL2JvYXJkLWl0ZW0vYm9hcmQtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQVUsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoSCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsdUJBQXVCLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQU1qSDtJQVFFO0lBQ0EsQ0FBQztJQUVELHFDQUFRLEdBQVI7SUFDQSxDQUFDO0lBRUQsNkNBQWdCLEdBQWhCO1FBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxZQUFZLFdBQVcsQ0FBQztJQUNoRCxDQUFDO0lBZFE7UUFBUixLQUFLLEVBQUU7OzBEQUF1QztJQUVRO1FBQXRELFlBQVksQ0FBQyxzQkFBc0IsRUFBRSxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUMsQ0FBQzswQ0FBTyxzQkFBc0I7b0RBQUM7SUFDN0I7UUFBdEQsWUFBWSxDQUFDLHNCQUFzQixFQUFFLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBQyxDQUFDOzBDQUFPLHNCQUFzQjtvREFBQztJQUMxQztRQUF6QyxlQUFlLENBQUMsdUJBQXVCLENBQUM7MENBQVMsU0FBUztzREFBMEI7SUFOMUUsa0JBQWtCO1FBSjlCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxlQUFlO1lBQ3pCLG0rQkFBMEM7U0FDM0MsQ0FBQzs7T0FDVyxrQkFBa0IsQ0FtQjlCO0lBQUQseUJBQUM7Q0FBQSxBQW5CRCxJQW1CQztTQW5CWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgQ29udGVudENoaWxkcmVuLCBJbnB1dCwgT25Jbml0LCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEJvYXJkSXRlbUJvZHlEaXJlY3RpdmUsIEJvYXJkSXRlbUNvdW50RGlyZWN0aXZlLCBCb2FyZEl0ZW1JY29uRGlyZWN0aXZlIH0gZnJvbSAnLi9ib2FyZC1pdGVtLmRpcmVjdGl2ZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3JiLWJvYXJkLWl0ZW0nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9ib2FyZC1pdGVtLmNvbXBvbmVudC5odG1sJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQm9hcmRJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KCkgc3RhdHVzSWNvbjogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgQENvbnRlbnRDaGlsZChCb2FyZEl0ZW1JY29uRGlyZWN0aXZlLCB7c3RhdGljOiBmYWxzZX0pIGljb246IEJvYXJkSXRlbUljb25EaXJlY3RpdmU7XHJcbiAgQENvbnRlbnRDaGlsZChCb2FyZEl0ZW1Cb2R5RGlyZWN0aXZlLCB7c3RhdGljOiBmYWxzZX0pIGJvZHk6IEJvYXJkSXRlbUJvZHlEaXJlY3RpdmU7XHJcbiAgQENvbnRlbnRDaGlsZHJlbihCb2FyZEl0ZW1Db3VudERpcmVjdGl2ZSkgY291bnRzOiBRdWVyeUxpc3Q8Qm9hcmRJdGVtQ291bnREaXJlY3RpdmU+O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgaXNUZW1wbGF0ZVN0YXR1cygpIHtcclxuICAgIHJldHVybiB0aGlzLnN0YXR1c0ljb24gaW5zdGFuY2VvZiBUZW1wbGF0ZVJlZjtcclxuICB9XHJcblxyXG5cclxufVxyXG4iXX0=