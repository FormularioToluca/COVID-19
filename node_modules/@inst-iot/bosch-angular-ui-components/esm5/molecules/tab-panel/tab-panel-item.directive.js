import * as tslib_1 from "tslib";
import { ContentChild, Directive, Input, TemplateRef } from '@angular/core';
import { TabPanelTitleDirective } from './tab-panel-title.directive';
var tabItemNum = 0;
var TabPanelItemDirective = /** @class */ (function () {
    function TabPanelItemDirective(templateRef) {
        this.templateRef = templateRef;
        this.rbTabPanelItemPosition = 'left';
        this.rbTabPanelItemType = 'tab';
        this.rbTabPanelItemAutoClose = true; // dropdown option
        this.routerLink = null;
        this.active = false;
        this.shown = 0;
        this.titleTpl = null;
        this.titleStr = null;
        this.id = 'tabItem' + (tabItemNum++);
    }
    Object.defineProperty(TabPanelItemDirective.prototype, "titleItem", {
        set: function (title) {
            if (title && !this.titleTpl) {
                this.titleTpl = title.templateRef;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabPanelItemDirective.prototype, "rbTabPanelItemDetails", {
        set: function (details) {
            this.details = details;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabPanelItemDirective.prototype, "rbTabPanelItemId", {
        set: function (id) {
            this.id = id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabPanelItemDirective.prototype, "rbTabPanelItem", {
        set: function (title) {
            if (title instanceof TemplateRef) {
                this.titleTpl = title;
            }
            else {
                this.titleStr = title;
            }
        },
        enumerable: true,
        configurable: true
    });
    TabPanelItemDirective.prototype.show = function () {
        this.active = true;
        this.shown++;
    };
    TabPanelItemDirective.prototype.hide = function () {
        this.active = false;
    };
    Object.defineProperty(TabPanelItemDirective.prototype, "position", {
        get: function () {
            return this.rbTabPanelItemPosition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabPanelItemDirective.prototype, "type", {
        get: function () {
            return this.rbTabPanelItemType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabPanelItemDirective.prototype, "autoClose", {
        get: function () {
            return this.rbTabPanelItemAutoClose;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], TabPanelItemDirective.prototype, "rbTabPanelItemPosition", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], TabPanelItemDirective.prototype, "rbTabPanelItemType", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], TabPanelItemDirective.prototype, "rbTabPanelItemAutoClose", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], TabPanelItemDirective.prototype, "rbTabPanelItemQueryParams", void 0);
    tslib_1.__decorate([
        ContentChild(TabPanelTitleDirective, { static: false }),
        tslib_1.__metadata("design:type", TabPanelTitleDirective),
        tslib_1.__metadata("design:paramtypes", [TabPanelTitleDirective])
    ], TabPanelItemDirective.prototype, "titleItem", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], TabPanelItemDirective.prototype, "rbTabPanelItemDetails", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], TabPanelItemDirective.prototype, "rbTabPanelItemId", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], TabPanelItemDirective.prototype, "rbTabPanelItem", null);
    TabPanelItemDirective = tslib_1.__decorate([
        Directive({
            selector: '[rbTabPanelItem]'
        }),
        tslib_1.__metadata("design:paramtypes", [TemplateRef])
    ], TabPanelItemDirective);
    return TabPanelItemDirective;
}());
export { TabPanelItemDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLXBhbmVsLWl0ZW0uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGluc3QtaW90L2Jvc2NoLWFuZ3VsYXItdWktY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbIm1vbGVjdWxlcy90YWItcGFuZWwvdGFiLXBhbmVsLWl0ZW0uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBTXJFLElBQUksVUFBVSxHQUFHLENBQUMsQ0FBQztBQUtuQjtJQW1CRSwrQkFBbUIsV0FBNkI7UUFBN0IsZ0JBQVcsR0FBWCxXQUFXLENBQWtCO1FBZnZDLDJCQUFzQixHQUF5QixNQUFNLENBQUM7UUFDdEQsdUJBQWtCLEdBQXFCLEtBQUssQ0FBQztRQUM3Qyw0QkFBdUIsR0FBRyxJQUFJLENBQUMsQ0FBQyxrQkFBa0I7UUFHM0QsZUFBVSxHQUFVLElBQUksQ0FBQztRQUl6QixXQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ2YsVUFBSyxHQUFHLENBQUMsQ0FBQztRQUVWLGFBQVEsR0FBcUIsSUFBSSxDQUFDO1FBQ2xDLGFBQVEsR0FBUSxJQUFJLENBQUM7UUFHbkIsSUFBSSxDQUFDLEVBQUUsR0FBRyxTQUFTLEdBQUcsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFc0Qsc0JBQUksNENBQVM7YUFBYixVQUFjLEtBQTZCO1lBQ2hHLElBQUksS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDO2FBQ25DO1FBQ0gsQ0FBQzs7O09BQUE7SUFFUSxzQkFBSSx3REFBcUI7YUFBekIsVUFBMEIsT0FBWTtZQUM3QyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN6QixDQUFDOzs7T0FBQTtJQUVRLHNCQUFJLG1EQUFnQjthQUFwQixVQUFxQixFQUFVO1lBQ3RDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2YsQ0FBQzs7O09BQUE7SUFFUSxzQkFBSSxpREFBYzthQUFsQixVQUFtQixLQUFVO1lBQ3BDLElBQUksS0FBSyxZQUFZLFdBQVcsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7YUFDdkI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7YUFDdkI7UUFDSCxDQUFDOzs7T0FBQTtJQUVELG9DQUFJLEdBQUo7UUFDRSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDZixDQUFDO0lBRUQsb0NBQUksR0FBSjtRQUNFLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxzQkFBSSwyQ0FBUTthQUFaO1lBQ0UsT0FBTyxJQUFJLENBQUMsc0JBQXNCLENBQUM7UUFDckMsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSx1Q0FBSTthQUFSO1lBQ0UsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUM7UUFDakMsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSw0Q0FBUzthQUFiO1lBQ0UsT0FBTyxJQUFJLENBQUMsdUJBQXVCLENBQUM7UUFDdEMsQ0FBQzs7O09BQUE7SUE1RFE7UUFBUixLQUFLLEVBQUU7O3lFQUF1RDtJQUN0RDtRQUFSLEtBQUssRUFBRTs7cUVBQThDO0lBQzdDO1FBQVIsS0FBSyxFQUFFOzswRUFBZ0M7SUFDL0I7UUFBUixLQUFLLEVBQUU7OzRFQUFtQztJQWdCWTtRQUF0RCxZQUFZLENBQUMsc0JBQXNCLEVBQUUsRUFBQyxNQUFNLEVBQUUsS0FBSyxFQUFDLENBQUM7MENBQXNCLHNCQUFzQjtpREFBdEIsc0JBQXNCOzBEQUlqRztJQUVRO1FBQVIsS0FBSyxFQUFFOzs7c0VBRVA7SUFFUTtRQUFSLEtBQUssRUFBRTs7O2lFQUVQO0lBRVE7UUFBUixLQUFLLEVBQUU7OzsrREFNUDtJQTNDVSxxQkFBcUI7UUFIakMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGtCQUFrQjtTQUM3QixDQUFDO2lEQW9CZ0MsV0FBVztPQW5CaEMscUJBQXFCLENBa0VqQztJQUFELDRCQUFDO0NBQUEsQUFsRUQsSUFrRUM7U0FsRVkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGVudENoaWxkLCBEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUYWJQYW5lbFRpdGxlRGlyZWN0aXZlIH0gZnJvbSAnLi90YWItcGFuZWwtdGl0bGUuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgUGFyYW1zIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuXHJcbmV4cG9ydCB0eXBlIFRhYlBhbmVsSXRlbVR5cGUgPSAndGFiJyB8ICdkcm9wZG93bicgfCAndGV4dCcgfCAnY29udGVudCcgfCAnY3VzdG9tJztcclxuZXhwb3J0IHR5cGUgVGFiUGFuZWxJdGVtUG9zaXRpb24gPSAnbGVmdCcgfCAncmlnaHQnIHwgJ2NlbnRlcic7XHJcblxyXG5sZXQgdGFiSXRlbU51bSA9IDA7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tyYlRhYlBhbmVsSXRlbV0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUYWJQYW5lbEl0ZW1EaXJlY3RpdmUge1xyXG5cclxuICBpZDogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoKSByYlRhYlBhbmVsSXRlbVBvc2l0aW9uOiBUYWJQYW5lbEl0ZW1Qb3NpdGlvbiA9ICdsZWZ0JztcclxuICBASW5wdXQoKSByYlRhYlBhbmVsSXRlbVR5cGU6IFRhYlBhbmVsSXRlbVR5cGUgPSAndGFiJztcclxuICBASW5wdXQoKSByYlRhYlBhbmVsSXRlbUF1dG9DbG9zZSA9IHRydWU7IC8vIGRyb3Bkb3duIG9wdGlvblxyXG4gIEBJbnB1dCgpIHJiVGFiUGFuZWxJdGVtUXVlcnlQYXJhbXM6IFBhcmFtczsgLy8gYWRkaXRpb25hbCBxdWVyeSBwYXJhbXMgZm9yIHJvdXRpbmdcclxuXHJcbiAgcm91dGVyTGluazogYW55W10gPSBudWxsO1xyXG5cclxuICBkZXRhaWxzOiBhbnk7XHJcblxyXG4gIGFjdGl2ZSA9IGZhbHNlO1xyXG4gIHNob3duID0gMDtcclxuXHJcbiAgdGl0bGVUcGw6IFRlbXBsYXRlUmVmPGFueT4gPSBudWxsO1xyXG4gIHRpdGxlU3RyOiBhbnkgPSBudWxsO1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4pIHtcclxuICAgIHRoaXMuaWQgPSAndGFiSXRlbScgKyAodGFiSXRlbU51bSsrKTtcclxuICB9XHJcblxyXG4gIEBDb250ZW50Q2hpbGQoVGFiUGFuZWxUaXRsZURpcmVjdGl2ZSwge3N0YXRpYzogZmFsc2V9KSBzZXQgdGl0bGVJdGVtKHRpdGxlOiBUYWJQYW5lbFRpdGxlRGlyZWN0aXZlKSB7XHJcbiAgICBpZiAodGl0bGUgJiYgIXRoaXMudGl0bGVUcGwpIHtcclxuICAgICAgdGhpcy50aXRsZVRwbCA9IHRpdGxlLnRlbXBsYXRlUmVmO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQElucHV0KCkgc2V0IHJiVGFiUGFuZWxJdGVtRGV0YWlscyhkZXRhaWxzOiBhbnkpIHtcclxuICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XHJcbiAgfVxyXG5cclxuICBASW5wdXQoKSBzZXQgcmJUYWJQYW5lbEl0ZW1JZChpZDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLmlkID0gaWQ7XHJcbiAgfVxyXG5cclxuICBASW5wdXQoKSBzZXQgcmJUYWJQYW5lbEl0ZW0odGl0bGU6IGFueSkge1xyXG4gICAgaWYgKHRpdGxlIGluc3RhbmNlb2YgVGVtcGxhdGVSZWYpIHtcclxuICAgICAgdGhpcy50aXRsZVRwbCA9IHRpdGxlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy50aXRsZVN0ciA9IHRpdGxlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2hvdygpIHtcclxuICAgIHRoaXMuYWN0aXZlID0gdHJ1ZTtcclxuICAgIHRoaXMuc2hvd24rKztcclxuICB9XHJcblxyXG4gIGhpZGUoKSB7XHJcbiAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHBvc2l0aW9uKCkge1xyXG4gICAgcmV0dXJuIHRoaXMucmJUYWJQYW5lbEl0ZW1Qb3NpdGlvbjtcclxuICB9XHJcblxyXG4gIGdldCB0eXBlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMucmJUYWJQYW5lbEl0ZW1UeXBlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGF1dG9DbG9zZSgpIHtcclxuICAgIHJldHVybiB0aGlzLnJiVGFiUGFuZWxJdGVtQXV0b0Nsb3NlO1xyXG4gIH1cclxuXHJcbn1cclxuIl19