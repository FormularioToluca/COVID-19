import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
var LanguageSelectorComponent = /** @class */ (function () {
    function LanguageSelectorComponent() {
        this.languageChange = new EventEmitter();
    }
    LanguageSelectorComponent.prototype.ngOnInit = function () {
    };
    LanguageSelectorComponent.prototype.selectLanguage = function (l) {
        this.language = l.id;
        this.languageChange.next(this.language);
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Array)
    ], LanguageSelectorComponent.prototype, "languages", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], LanguageSelectorComponent.prototype, "language", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], LanguageSelectorComponent.prototype, "languageChange", void 0);
    LanguageSelectorComponent = tslib_1.__decorate([
        Component({
            selector: 'rb-language-selector',
            template: "<a href=\"javascript:\" [rbDropdown]=\"items\" [position]=\"'right'\" class=\"language-selector-link language rb-dropdown-toggle\">\n  {{language}}\n</a>\n<ng-template #items>\n  <ul class=\"link-list\">\n    <li *ngFor=\"let l of languages\">\n      <a href=\"javascript:\" (click)=\"selectLanguage(l)\" [class.active]=\"l.id === language\">\n        <span class=\"language\">{{l.id}}</span> | {{l.name}}\n      </a>\n    </li>\n  </ul>\n</ng-template>\n"
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], LanguageSelectorComponent);
    return LanguageSelectorComponent;
}());
export { LanguageSelectorComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2Utc2VsZWN0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGluc3QtaW90L2Jvc2NoLWFuZ3VsYXItdWktY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbIm1vbGVjdWxlcy9sYW5ndWFnZS1zZWxlY3Rvci9sYW5ndWFnZS1zZWxlY3Rvci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFXL0U7SUFNRTtRQUZVLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztJQUd0RCxDQUFDO0lBRUQsNENBQVEsR0FBUjtJQUNBLENBQUM7SUFFRCxrREFBYyxHQUFkLFVBQWUsQ0FBZTtRQUM1QixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFiUTtRQUFSLEtBQUssRUFBRTs7Z0VBQTJCO0lBQzFCO1FBQVIsS0FBSyxFQUFFOzsrREFBa0I7SUFDaEI7UUFBVCxNQUFNLEVBQUU7O3FFQUE2QztJQUozQyx5QkFBeUI7UUFKckMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHNCQUFzQjtZQUNoQyxtZEFBaUQ7U0FDbEQsQ0FBQzs7T0FDVyx5QkFBeUIsQ0FpQnJDO0lBQUQsZ0NBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQWpCWSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGFuZ3VhZ2VJdGVtIHtcbiAgaWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdyYi1sYW5ndWFnZS1zZWxlY3RvcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9sYW5ndWFnZS1zZWxlY3Rvci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgTGFuZ3VhZ2VTZWxlY3RvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgbGFuZ3VhZ2VzOiBMYW5ndWFnZUl0ZW1bXTtcbiAgQElucHV0KCkgbGFuZ3VhZ2U6IHN0cmluZztcbiAgQE91dHB1dCgpIGxhbmd1YWdlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG4gIHNlbGVjdExhbmd1YWdlKGw6IExhbmd1YWdlSXRlbSkge1xuICAgIHRoaXMubGFuZ3VhZ2UgPSBsLmlkO1xuICAgIHRoaXMubGFuZ3VhZ2VDaGFuZ2UubmV4dCh0aGlzLmxhbmd1YWdlKTtcbiAgfVxuXG59XG4iXX0=