import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
var CalloutComponent = /** @class */ (function () {
    function CalloutComponent() {
        this.type = 'error';
        this.icon = ['rb-ic', 'rb-ic-alert-error-filled'];
        this.type2icon = {
            error: 'rb-ic-alert-error-filled',
            success: 'rb-ic-alert-success-filled',
            warning: 'rb-ic-alert-warning-filled',
            info: 'rb-ic-info',
        };
    }
    CalloutComponent.prototype.ngOnChanges = function (changes) {
        if (changes.type) {
            this.icon = ['rb-ic', this.type2icon[changes.type.currentValue]];
        }
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], CalloutComponent.prototype, "type", void 0);
    CalloutComponent = tslib_1.__decorate([
        Component({
            selector: 'rb-callout',
            template: "<div [class]=\"'rb-callout rb-callout-'+type\">\r\n  <span [ngClass]=\"icon\"></span>\r\n  <ng-content></ng-content>\r\n</div>\r\n"
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], CalloutComponent);
    return CalloutComponent;
}());
export { CalloutComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsbG91dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaW5zdC1pb3QvYm9zY2gtYW5ndWxhci11aS1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiYXRvbXMvY2FsbG91dC9jYWxsb3V0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBTTNFO0lBYUU7UUFYUyxTQUFJLEdBQTZDLE9BQU8sQ0FBQztRQUVsRSxTQUFJLEdBQUcsQ0FBQyxPQUFPLEVBQUUsMEJBQTBCLENBQUMsQ0FBQztRQUU3QyxjQUFTLEdBQUc7WUFDVixLQUFLLEVBQUUsMEJBQTBCO1lBQ2pDLE9BQU8sRUFBRSw0QkFBNEI7WUFDckMsT0FBTyxFQUFFLDRCQUE0QjtZQUNyQyxJQUFJLEVBQUUsWUFBWTtTQUNuQixDQUFDO0lBR0YsQ0FBQztJQUVELHNDQUFXLEdBQVgsVUFBWSxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7WUFDaEIsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztTQUNsRTtJQUNILENBQUM7SUFsQlE7UUFBUixLQUFLLEVBQUU7O2tEQUEwRDtJQUZ2RCxnQkFBZ0I7UUFKNUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLFlBQVk7WUFDdEIsOElBQXVDO1NBQ3hDLENBQUM7O09BQ1csZ0JBQWdCLENBdUI1QjtJQUFELHVCQUFDO0NBQUEsQUF2QkQsSUF1QkM7U0F2QlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3JiLWNhbGxvdXQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jYWxsb3V0LmNvbXBvbmVudC5odG1sJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2FsbG91dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcblxyXG4gIEBJbnB1dCgpIHR5cGU6ICdlcnJvcicgfCAnd2FybmluZycgfCAnaW5mbycgfCAnc3VjY2VzcycgPSAnZXJyb3InO1xyXG5cclxuICBpY29uID0gWydyYi1pYycsICdyYi1pYy1hbGVydC1lcnJvci1maWxsZWQnXTtcclxuXHJcbiAgdHlwZTJpY29uID0ge1xyXG4gICAgZXJyb3I6ICdyYi1pYy1hbGVydC1lcnJvci1maWxsZWQnLFxyXG4gICAgc3VjY2VzczogJ3JiLWljLWFsZXJ0LXN1Y2Nlc3MtZmlsbGVkJyxcclxuICAgIHdhcm5pbmc6ICdyYi1pYy1hbGVydC13YXJuaW5nLWZpbGxlZCcsXHJcbiAgICBpbmZvOiAncmItaWMtaW5mbycsXHJcbiAgfTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICBpZiAoY2hhbmdlcy50eXBlKSB7XHJcbiAgICAgIHRoaXMuaWNvbiA9IFsncmItaWMnLCB0aGlzLnR5cGUyaWNvbltjaGFuZ2VzLnR5cGUuY3VycmVudFZhbHVlXV07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbn1cclxuIl19