import * as tslib_1 from "tslib";
import { Component, ContentChildren, ElementRef, EventEmitter, forwardRef, Input, Output, QueryList, Renderer2, TemplateRef, ViewChild } from '@angular/core';
import { FormValidationMessageDirective } from '../form-validation-message.directive';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { emptyFunction } from '../forms-util';
var FormFileComponent = /** @class */ (function () {
    function FormFileComponent(renderer, elementRef) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.label = null;
        this.placeholder = '';
        this.filesChange = new EventEmitter();
        this.id = 'file.' + Math.random();
        this.onChange = emptyFunction;
        this.onTouched = emptyFunction;
        this.filePreview = '';
    }
    FormFileComponent_1 = FormFileComponent;
    FormFileComponent.prototype.checkSelectedFiles = function () {
        var fileNames = [];
        var files = [];
        for (var i = 0; i < this.file.nativeElement.files.length; i++) {
            var file = this.file.nativeElement.files[i];
            files.push(file);
            if (file.name) {
                fileNames.push(file.name);
            }
        }
        if (files.length === 0) {
            this.renderer.removeClass(this.elementRef.nativeElement, 'not-empty');
        }
        else {
            this.renderer.addClass(this.elementRef.nativeElement, 'not-empty');
        }
        this.filePreview = fileNames.join(', ');
        if (this.filePreview.length > 100) {
            this.filePreview = this.filePreview.substr(0, 97) + '... (' + fileNames.length + ')';
        }
        console.log('files', files);
        this.onChange(files);
    };
    FormFileComponent.prototype.isLabelTemplate = function () {
        return this.label instanceof TemplateRef;
    };
    FormFileComponent.prototype.writeValue = function (value) {
        // console.warn('unsupported write to rb-form-file', value);
    };
    FormFileComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    FormFileComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    FormFileComponent.prototype.setDisabledState = function (isDisabled) {
        this.renderer.setProperty(this.file.nativeElement, 'disabled', isDisabled);
    };
    var FormFileComponent_1;
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], FormFileComponent.prototype, "label", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], FormFileComponent.prototype, "name", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], FormFileComponent.prototype, "placeholder", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], FormFileComponent.prototype, "filesChange", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], FormFileComponent.prototype, "accept", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], FormFileComponent.prototype, "multiple", void 0);
    tslib_1.__decorate([
        ViewChild('file', { static: true }),
        tslib_1.__metadata("design:type", ElementRef)
    ], FormFileComponent.prototype, "file", void 0);
    tslib_1.__decorate([
        ContentChildren(FormValidationMessageDirective),
        tslib_1.__metadata("design:type", QueryList)
    ], FormFileComponent.prototype, "messages", void 0);
    FormFileComponent = FormFileComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'rb-form-file',
            template: "<div class=\"input-wrapper\" [class.no-label]=\"!label\">\r\n\r\n  <input type=\"file\"\r\n         [id]=\"id + 'input'\"\r\n         [placeholder]=\"placeholder\"\r\n         [multiple]=\"multiple !== undefined\"\r\n         [accept]=\"accept\"\r\n         class=\"file-input with-icon\"\r\n         #file\r\n         (change)=\"checkSelectedFiles()\"\r\n         (blur)=\"onTouched()\">\r\n  <span class=\"input-icon no-pointer\">\r\n    <span class=\"rb-ic rb-ic-upload\"></span>\r\n  </span>\r\n\r\n  <label class=\"rb-btn rb-select-btn input\" [for]=\"id + 'input'\">{{filePreview}}</label>\r\n\r\n  <label class=\"label\" [for]=\"id + 'input'\">\r\n    {{!isLabelTemplate()?label:''}}\r\n    <ng-container *ngIf=\"isLabelTemplate()\">\r\n      <ng-container *ngTemplateOutlet=\"label\"></ng-container>\r\n    </ng-container>\r\n  </label>\r\n  <span class=\"input-background\"></span>\r\n</div>\r\n<rb-form-errors [messages]=\"messages\"></rb-form-errors>\r\n",
            providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(function () { return FormFileComponent_1; }), multi: true }]
        }),
        tslib_1.__metadata("design:paramtypes", [Renderer2, ElementRef])
    ], FormFileComponent);
    return FormFileComponent;
}());
export { FormFileComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BpbnN0LWlvdC9ib3NjaC1hbmd1bGFyLXVpLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJhdG9tcy9mb3JtLWZpZWxkcy9mb3JtLWZpbGUvZm9ybS1maWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxlQUFlLEVBQ2YsVUFBVSxFQUNWLFlBQVksRUFDWixVQUFVLEVBQ1YsS0FBSyxFQUNMLE1BQU0sRUFDTixTQUFTLEVBQ1QsU0FBUyxFQUNULFdBQVcsRUFDWCxTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdEYsT0FBTyxFQUF3QixpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFROUM7SUFvQkUsMkJBQW9CLFFBQW1CLEVBQVUsVUFBc0I7UUFBbkQsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUFVLGVBQVUsR0FBVixVQUFVLENBQVk7UUFsQjlELFVBQUssR0FBOEIsSUFBSSxDQUFDO1FBRXhDLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBRWhCLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUVuRCxPQUFFLEdBQUcsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQU83QixhQUFRLEdBQUcsYUFBYSxDQUFDO1FBQ3pCLGNBQVMsR0FBRyxhQUFhLENBQUM7UUFFMUIsZ0JBQVcsR0FBRyxFQUFFLENBQUM7SUFHakIsQ0FBQzswQkFyQlUsaUJBQWlCO0lBdUI1Qiw4Q0FBa0IsR0FBbEI7UUFFRSxJQUFNLFNBQVMsR0FBRyxFQUFFLENBQUM7UUFDckIsSUFBTSxLQUFLLEdBQVcsRUFBRSxDQUFDO1FBQ3pCLEtBQUssSUFBSSxDQUFD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QkFBaUIsQ0F3RTdCO0lBQUQsd0JBQUM7Q0FBQSxBQXhFRCxJQXdFQztTQXhFWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENvbXBvbmVudCxcclxuICBDb250ZW50Q2hpbGRyZW4sXHJcbiAgRWxlbWVudFJlZixcclxuICBFdmVudEVtaXR0ZXIsXHJcbiAgZm9yd2FyZFJlZixcclxuICBJbnB1dCxcclxuICBPdXRwdXQsXHJcbiAgUXVlcnlMaXN0LFxyXG4gIFJlbmRlcmVyMixcclxuICBUZW1wbGF0ZVJlZixcclxuICBWaWV3Q2hpbGRcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybVZhbGlkYXRpb25NZXNzYWdlRGlyZWN0aXZlIH0gZnJvbSAnLi4vZm9ybS12YWxpZGF0aW9uLW1lc3NhZ2UuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBlbXB0eUZ1bmN0aW9uIH0gZnJvbSAnLi4vZm9ybXMtdXRpbCc7XHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdyYi1mb3JtLWZpbGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9mb3JtLWZpbGUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHByb3ZpZGVyczogW3twcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUiwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRm9ybUZpbGVDb21wb25lbnQpLCBtdWx0aTogdHJ1ZX1dXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGb3JtRmlsZUNvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcclxuXHJcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4gPSBudWxsO1xyXG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZztcclxuICBASW5wdXQoKSBwbGFjZWhvbGRlciA9ICcnO1xyXG5cclxuICBAT3V0cHV0KCkgZmlsZXNDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPEZpbGVbXT4oKTtcclxuXHJcbiAgaWQgPSAnZmlsZS4nICsgTWF0aC5yYW5kb20oKTtcclxuICBASW5wdXQoKSBhY2NlcHQ6IHN0cmluZztcclxuICBASW5wdXQoKSBtdWx0aXBsZTtcclxuXHJcbiAgQFZpZXdDaGlsZCgnZmlsZScsIHsgc3RhdGljOiB0cnVlIH0pIGZpbGU6IEVsZW1lbnRSZWY7XHJcbiAgQENvbnRlbnRDaGlsZHJlbihGb3JtVmFsaWRhdGlvbk1lc3NhZ2VEaXJlY3RpdmUpIG1lc3NhZ2VzOiBRdWVyeUxpc3Q8Rm9ybVZhbGlkYXRpb25NZXNzYWdlRGlyZWN0aXZlPjtcclxuXHJcbiAgb25DaGFuZ2UgPSBlbXB0eUZ1bmN0aW9uO1xyXG4gIG9uVG91Y2hlZCA9IGVtcHR5RnVuY3Rpb247XHJcblxyXG4gIGZpbGVQcmV2aWV3ID0gJyc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMiwgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgfVxyXG5cclxuICBjaGVja1NlbGVjdGVkRmlsZXMoKSB7XHJcblxyXG4gICAgY29uc3QgZmlsZU5hbWVzID0gW107XHJcbiAgICBjb25zdCBmaWxlczogRmlsZVtdID0gW107XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuZmlsZS5uYXRpdmVFbGVtZW50LmZpbGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGZpbGU6IEZpbGUgPSB0aGlzLmZpbGUubmF0aXZlRWxlbWVudC5maWxlc1tpXTtcclxuICAgICAgZmlsZXMucHVzaChmaWxlKTtcclxuICAgICAgaWYgKGZpbGUubmFtZSkge1xyXG4gICAgICAgIGZpbGVOYW1lcy5wdXNoKGZpbGUubmFtZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAoZmlsZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdub3QtZW1wdHknKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdub3QtZW1wdHknKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmZpbGVQcmV2aWV3ID0gZmlsZU5hbWVzLmpvaW4oJywgJyk7XHJcbiAgICBpZiAodGhpcy5maWxlUHJldmlldy5sZW5ndGggPiAxMDApIHtcclxuICAgICAgdGhpcy5maWxlUHJldmlldyA9IHRoaXMuZmlsZVByZXZpZXcuc3Vic3RyKDAsIDk3KSArICcuLi4gKCcgKyBmaWxlTmFtZXMubGVuZ3RoICsgJyknO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKCdmaWxlcycsIGZpbGVzKTtcclxuXHJcbiAgICB0aGlzLm9uQ2hhbmdlKGZpbGVzKTtcclxuXHJcbiAgfVxyXG5cclxuICBpc0xhYmVsVGVtcGxhdGUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5sYWJlbCBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmO1xyXG4gIH1cclxuXHJcbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZCB7XHJcbiAgICAvLyBjb25zb2xlLndhcm4oJ3Vuc3VwcG9ydGVkIHdyaXRlIHRvIHJiLWZvcm0tZmlsZScsIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIHJlZ2lzdGVyT25DaGFuZ2UoZm46IChfOiBhbnkpID0+IHZvaWQpOiB2b2lkIHtcclxuICAgIHRoaXMub25DaGFuZ2UgPSBmbjtcclxuICB9XHJcblxyXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiAoKSA9PiB2b2lkKTogdm9pZCB7XHJcbiAgICB0aGlzLm9uVG91Y2hlZCA9IGZuO1xyXG4gIH1cclxuXHJcbiAgc2V0RGlzYWJsZWRTdGF0ZShpc0Rpc2FibGVkOiBib29sZWFuKTogdm9pZCB7XHJcbiAgICB0aGlzLnJlbmRlcmVyLnNldFByb3BlcnR5KHRoaXMuZmlsZS5uYXRpdmVFbGVtZW50LCAnZGlzYWJsZWQnLCBpc0Rpc2FibGVkKTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==