import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, forwardRef, Inject, Optional, Renderer2, Self } from '@angular/core';
import { CUSTOM_VALUE_CONVERTER, FormInputComponent } from '../form-input/form-input.component';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var FormSelectComponent = /** @class */ (function (_super) {
    tslib_1.__extends(FormSelectComponent, _super);
    function FormSelectComponent(renderer, elementRef, valueConverter, cd) {
        return _super.call(this, renderer, elementRef, valueConverter, cd) || this;
    }
    FormSelectComponent_1 = FormSelectComponent;
    var FormSelectComponent_1;
    FormSelectComponent = FormSelectComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'rb-form-select',
            template: "<div class=\"input-wrapper\" [class.no-label]=\"!label\">\r\n\r\n  <select class=\"input select\"\r\n          [id]=\"id + 'input'\"\r\n          (blur)=\"onTouched()\"\r\n          (change)=\"updateValue($event.target.value)\" #input>\r\n    <ng-content></ng-content>\r\n  </select>\r\n\r\n  <label [for]=\"id + 'input'\" class=\"label select-label\">\r\n    {{!isLabelTemplate()?label:''}}\r\n    <ng-container *ngIf=\"isLabelTemplate()\">\r\n      <ng-container *ngTemplateOutlet=\"label\"></ng-container>\r\n    </ng-container>\r\n  </label>\r\n  <span class=\"select-icon rb-ic rb-ic-down\"></span>\r\n  <span class=\"input-background\"></span>\r\n</div>\r\n<rb-form-errors [messages]=\"messages\"></rb-form-errors>\r\n",
            providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(function () { return FormSelectComponent_1; }), multi: true }]
        }),
        tslib_1.__param(2, Optional()), tslib_1.__param(2, Self()), tslib_1.__param(2, Inject(CUSTOM_VALUE_CONVERTER)),
        tslib_1.__metadata("design:paramtypes", [Renderer2,
            ElementRef, Object, ChangeDetectorRef])
    ], FormSelectComponent);
    return FormSelectComponent;
}(FormInputComponent));
export { FormSelectComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1zZWxlY3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGluc3QtaW90L2Jvc2NoLWFuZ3VsYXItdWktY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImF0b21zL2Zvcm0tZmllbGRzL2Zvcm0tc2VsZWN0L2Zvcm0tc2VsZWN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4SCxPQUFPLEVBQUUsc0JBQXNCLEVBQXdCLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDdEgsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFPbkQ7SUFBeUMsK0NBQWtCO0lBRXpELDZCQUFZLFFBQW1CLEVBQ25CLFVBQXNCLEVBQzhCLGNBQW9DLEVBQ3hGLEVBQXFCO2VBQy9CLGtCQUFNLFFBQVEsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEVBQUUsQ0FBQztJQUNqRCxDQUFDOzRCQVBVLG1CQUFtQjs7SUFBbkIsbUJBQW1CO1FBTC9CLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsZ3VCQUEyQztZQUMzQyxTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxxQkFBbUIsRUFBbkIsQ0FBbUIsQ0FBQyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUMsQ0FBQztTQUMzRyxDQUFDO1FBS2EsbUJBQUEsUUFBUSxFQUFFLENBQUEsRUFBRSxtQkFBQSxJQUFJLEVBQUUsQ0FBQSxFQUFFLG1CQUFBLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFBO2lEQUZ6QyxTQUFTO1lBQ1AsVUFBVSxVQUVsQixpQkFBaUI7T0FMdEIsbUJBQW1CLENBUy9CO0lBQUQsMEJBQUM7Q0FBQSxBQVRELENBQXlDLGtCQUFrQixHQVMxRDtTQVRZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIGZvcndhcmRSZWYsIEluamVjdCwgT3B0aW9uYWwsIFJlbmRlcmVyMiwgU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDVVNUT01fVkFMVUVfQ09OVkVSVEVSLCBDdXN0b21WYWx1ZUNvbnZlcnRlciwgRm9ybUlucHV0Q29tcG9uZW50IH0gZnJvbSAnLi4vZm9ybS1pbnB1dC9mb3JtLWlucHV0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdyYi1mb3JtLXNlbGVjdCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2Zvcm0tc2VsZWN0LmNvbXBvbmVudC5odG1sJyxcclxuICBwcm92aWRlcnM6IFt7cHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEZvcm1TZWxlY3RDb21wb25lbnQpLCBtdWx0aTogdHJ1ZX1dXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGb3JtU2VsZWN0Q29tcG9uZW50IGV4dGVuZHMgRm9ybUlucHV0Q29tcG9uZW50IHtcclxuXHJcbiAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMixcclxuICAgICAgICAgICAgICBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxyXG4gICAgICAgICAgICAgIEBPcHRpb25hbCgpIEBTZWxmKCkgQEluamVjdChDVVNUT01fVkFMVUVfQ09OVkVSVEVSKSB2YWx1ZUNvbnZlcnRlcjogQ3VzdG9tVmFsdWVDb252ZXJ0ZXIsXHJcbiAgICAgICAgICAgICAgY2Q6IENoYW5nZURldGVjdG9yUmVmKSB7XHJcbiAgICBzdXBlcihyZW5kZXJlciwgZWxlbWVudFJlZiwgdmFsdWVDb252ZXJ0ZXIsIGNkKTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==